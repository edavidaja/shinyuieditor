.tractInfoDisplay {
  --transition-delay: 0.1s;
  --transition-speed: 0.1s;
  --transition-ease: ease-in-out;
  height: var(--grid-pad);
  width: var(--grid-pad);
  --offset: calc(-1 * var(--grid-pad));
  z-index: 1;
  display: grid;
  transition-property: opacity, width, height;
  transition-duration: var(--transition-speed);
  transition-delay: var(--transition-delay);
  transition-timing-function: var(--transition-ease);
  overflow: hidden;
  --rows-width: var(--grid-pad);
  --cols-height: var(--grid-pad);
}

.tractInfoDisplay[data-drag-dir="rows"] {
  grid-column: 1;
  grid-row: var(--tract-index);
  align-self: center;
  height: 100%;
  width: var(--rows-width);
  margin-left: var(--offset);
  align-items: center;
}

.tractInfoDisplay[data-drag-dir="columns"] {
  grid-row: 1;
  grid-column: var(--tract-index);
  justify-self: center;
  width: 100%;
  height: var(--cols-height);
  margin-top: var(--offset);
  justify-content: center;
}

/* Focus within here makes sure that the tract control doesn't dissapear if the
user is typing in the input field but mouses off */
.tractInfoDisplay:hover,
.tractInfoDisplay[data-visible="true"],
.tractInfoDisplay:focus-within {
  opacity: 1;
  --rows-width: 122px;
  --cols-height: 36px;
}

.tractInfoDisplay .sizeWidget {
  padding-inline: 5px;
  padding-block: 3px;
}

.tractInfoDisplay .sizeWidget > div {
  opacity: 0;
  transition-property: opacity, filter;
  transition-duration: var(--transition-speed);
  transition-delay: var(--transition-delay);
  transition-timing-function: var(--transition-ease);
}
.tractInfoDisplay:hover .sizeWidget > div,
.tractInfoDisplay[data-visible="true"] .sizeWidget > div,
.tractInfoDisplay:focus-within .sizeWidget > div {
  opacity: 1;
  filter: drop-shadow(2px 2px 3px hsl(0deg 0% 0% / 0.4));
}
