.tractInfoDisplay {
  --transition-out-delay: 0.7s;
  --transition-in-delay: 0.2s;
  --transition-delay: var(--transition-out-delay);
  --transition-speed: 0.1s;
  --transition-ease: ease-in-out;

  --shadow: drop-shadow(2px 2px 3px hsl(0deg 0% 0% / 0.4));
  --offset: calc(-1 * var(--grid-pad));
  z-index: 1;
  display: flex;
  position: relative;
  --rows-width: fit-content;
  --cols-height: fit-content;
  --scale: 0;
  --hover-scale: 0;
  transition: background-color var(--transition-speed) var(--transition-ease)
    var(--transition-delay);
  border-radius: var(--corner-radius);
  isolation: isolate;
}

.sizeWidget {
  transition: transform var(--transition-speed) var(--transition-ease)
    var(--transition-delay);
  padding-inline: 5px;
  padding-block: 3px;
  display: grid;
}

.sizeWidget > div {
  filter: var(--shadow);
}

.hoverListener {
  width: 100%;
  height: 100%;
  flex-shrink: 0;
}

.tractInfoDisplay[data-drag-dir="rows"] {
  grid-column: 1;
  grid-row: var(--tract-index);
  height: 100%;
  width: var(--grid-pad);
  position: relative;
  margin-left: var(--offset);
  align-items: center;
  flex-direction: row;
}

.tractInfoDisplay[data-drag-dir="rows"] > .sizeWidget {
  height: 100%;
  width: fit-content;
  align-content: center;
  transform: scaleX(var(--scale));
  transform-origin: left;
}

.tractInfoDisplay[data-drag-dir="columns"] {
  grid-row: 1;
  grid-column: var(--tract-index);
  width: 100%;
  height: var(--grid-pad);
  margin-top: var(--offset);
  flex-direction: column;
}

.tractInfoDisplay[data-drag-dir="columns"] > .sizeWidget {
  height: fit-content;
  width: 100%;
  justify-content: center;
  transform: scaleY(var(--scale));
  transform-origin: top;
}

/* Focus within here makes sure that the tract control doesn't dissapear if the
user is typing in the input field but mouses off */
.tractInfoDisplay:hover,
.tractInfoDisplay[data-visible="true"],
.tractInfoDisplay:focus-within {
  --scale: 100%;
  --transition-delay: var(--transition-in-delay);
}

.tractInfoDisplay:hover {
  --hover-scale: 1;
  /* background-color: var(--divider-color, pink); */
}

.tractInfoDisplay[data-drag-dir="columns"]::after,
.tractInfoDisplay[data-drag-dir="rows"]::after {
  --thickness: 8px;
  content: "";
  background-color: var(--rstudio-blue);
  position: absolute;
  transition: transform var(--transition-speed) var(--transition-ease)
    var(--transition-delay);
}
.tractInfoDisplay[data-drag-dir="columns"]::after {
  width: 100%;
  height: var(--thickness);
  top: 0;
  top: calc(var(--thickness) / -2);
  transform: scaleX(var(--hover-scale));
}

.tractInfoDisplay[data-drag-dir="rows"]::after {
  height: 100%;
  width: var(--thickness);
  left: calc(var(--thickness) / -2);
  transform: scaleX(var(--hover-scale));
}

.tractAddBeforeButton,
.tractAddAfterButton {
  --size: 20px;
  --offset_amnt: 2px;
  --offset: calc(var(--offset_amnt) - var(--size));
  width: var(--size);
  aspect-ratio: 1/1;
  display: grid;
  place-content: center;
  border-radius: 50%;
  border: 1px solid var(--rstudio-blue);
  background-color: var(--rstudio-white);
  transform: scale(var(--hover-scale));
  transition: transform var(--transition-speed) var(--transition-ease)
    var(--transition-delay);
  position: absolute;
  /* filter: var(--shadow); */
  z-index: 1;
}

.tractInfoDisplay[data-drag-dir="columns"] .tractAddBeforeButton {
  left: var(--offset);
  bottom: 0;
}
.tractInfoDisplay[data-drag-dir="columns"] .tractAddAfterButton {
  right: var(--offset);
  bottom: 0;
}
.tractInfoDisplay[data-drag-dir="rows"] .tractAddBeforeButton {
  top: var(--offset);
  right: 0;
}
.tractInfoDisplay[data-drag-dir="rows"] .tractAddAfterButton {
  bottom: var(--offset);
  right: 0;
}
